// sectioning

_CHAPTER_TAG: "!"
_SECTION_TAG: "!!"
_SUBSECTION_TAG: "!!!"
_SUBSUBSECTION_TAG: "!!!!"

TITLE: /[^\n`]+/

// block

_BLOCK_TAG: "@"
BLOCK_TYPE_TAG: /[A-Za-z0-9]+/
_BLOCK_TAG_SEPPARATOR: ":"
_BLOCK_END: /\n[ \t]*(?=\n[ \t]*\n)/

// whitespace

SPACE: " "
DOUBLE_SPACE: "  "
TRIPLE_SPACE: "   "
TAB: /\t/

INLINE_WHITESPACE: _INLINE_WHITESPACE
inline_whitespace: (TRIPLE_SPACE | DOUBLE_SPACE | SPACE | TAB)+
_INLINE_WHITESPACE: (TRIPLE_SPACE | DOUBLE_SPACE | SPACE | TAB)+

NEWLINE: _NEWLINE
_NEWLINE: /\n/

// center

CENTER_OPEN: ">"
CENTER_CLOSE: "<" 

// comment

COMMENT_DELIMITER: "##"
COMMENT_TEXT: /([^#]|((?<!#)#(?!#)))+/

// math block

MATH_BLOCK_DELIMITER: _MATH_BLOCK_DELIMITER
_MATH_BLOCK_DELIMITER: /(?!<`)`(?!`)/

// table

_table_delimiter: TABLE_SINGLE_DELIMITER | TABLE_DOUBLE_DELIMITER
TABLE_SINGLE_DELIMITER: /((?<!\|)\|(?!\|))/
TABLE_DOUBLE_DELIMITER: "||"
TABLE_SEPPARATOR: "|--" /[^(\n)]*/
TABLE_ALIGNMENT: "<" | ">"

// text

SPECIAL_LETTER: /[ěščřžýáíéďňťóúůöĚŠČŘŽÝÁÍÉĎŇŤÓÚŮÖ]/
PASSIVE_CHARACTER: /[a-zA-Z0-9\(\)\[\]\.,~\+\*\/:;'"_\?&\%]|((?<!#)#(?!#))/ | SPECIAL_LETTER
WORD: (LETTER | NUMBER | SPECIAL_LETTER | /[\(\)\[\]\.,\!@~\-\+(\*(?!{))\/:;'"(_(?!{)))\?&\(%(?!{)))(^(?!{)))]|((?<!#)#(?!#))/  )+
FIRST_WORD: PASSIVE_CHARACTER WORD?

text: INLINE_WHITESPACE? WORD (INLINE_WHITESPACE WORD)* INLINE_WHITESPACE?
sanitized_text: INLINE_WHITESPACE? FIRST_WORD (INLINE_WHITESPACE WORD)* INLINE_WHITESPACE?

// formatting

BOLD_TEXT_DELIMITER: "*{"
ITALIC_TEXT_DELIMITER: "%{"
UNDERLINE_TEXT_DELIMITER: "_{"
OVERLINE_TEXT_DELIMITER: "^{"

// list

SIMPLE_LIST_BULLET: /\-(?!{)/
COMPOSITE_LIST_BULLET: "-{"

// image

IMAGE: "\\image" /\[[^\]]*\]/? "{" /[^}]+/ "}"


////////////////////////////////////////////////////////////////////////

start: (_INLINE_WHITESPACE | _NEWLINE)* (_object NEWLINE+)* _object (_INLINE_WHITESPACE | _NEWLINE)*

title: (TITLE | INLINE_WHITESPACE | math_block)+

_object: (chapter_header | section_header | subsection_header | subsubsection_header | list_item | block | table | center | content | inline_whitespace)
_inline_object: (chapter_header | section_header | subsection_header | subsubsection_header | list_item | block | table | center | inline_content)

content: INLINE_WHITESPACE? (image | comment | sanitized_text | bold_text | italic_text | underline_text | overline_text | math_block) (image | comment | text | bold_text | italic_text | underline_text | overline_text | math_block | INLINE_WHITESPACE)* INLINE_WHITESPACE?
inline_content: INLINE_WHITESPACE? (image | comment | text | bold_text | italic_text | underline_text | overline_text | math_block) (image | comment | text | bold_text | italic_text | underline_text | overline_text | math_block | INLINE_WHITESPACE)* INLINE_WHITESPACE?

// lists

list_bullet: SIMPLE_LIST_BULLET (/[^ `]/ | math_block)* | COMPOSITE_LIST_BULLET (/[^`}]/ | math_block)* "}" 
list_item: INLINE_WHITESPACE? list_bullet (INLINE_WHITESPACE inline_content)? _INLINE_WHITESPACE?

// formatting

bold_text: BOLD_TEXT_DELIMITER text CLOSE_BRACKET
italic_text: ITALIC_TEXT_DELIMITER text CLOSE_BRACKET
underline_text: UNDERLINE_TEXT_DELIMITER text CLOSE_BRACKET
overline_text: OVERLINE_TEXT_DELIMITER text CLOSE_BRACKET
// monotype_text:


// block

block: block_title _block_structure _BLOCK_END
block_title: _BLOCK_TAG (_INLINE_WHITESPACE BLOCK_TYPE_TAG)? _BLOCK_TAG_SEPPARATOR (_INLINE_WHITESPACE title)? _INLINE_WHITESPACE?

_block_structure: (NEWLINE (_INLINE_WHITESPACE? _NEWLINE)? _block_object _INLINE_WHITESPACE?)*
_block_object: (block | list_item | table | center | content)

// center

center: INLINE_WHITESPACE? CENTER_OPEN (_INLINE_WHITESPACE | NEWLINE)* (_inline_object (INLINE_WHITESPACE | NEWLINE)*)+ CENTER_CLOSE _INLINE_WHITESPACE?

// table

table: table_row+
table_row: table_item+ _table_delimiter _INLINE_WHITESPACE? _NEWLINE
         | TABLE_SEPPARATOR _NEWLINE
table_item: _table_delimiter _INLINE_WHITESPACE? TABLE_ALIGNMENT? _INLINE_WHITESPACE? table_content _INLINE_WHITESPACE?
table_content: (comment | text | bold_text | italic_text | underline_text | overline_text | math_block | _INLINE_WHITESPACE)*

// math block

math_block: _MATH_BLOCK_DELIMITER _INLINE_WHITESPACE? expression _INLINE_WHITESPACE? _MATH_BLOCK_DELIMITER

// comment

comment: COMMENT_DELIMITER COMMENT_TEXT COMMENT_DELIMITER
indented_comment: INLINE_WHITESPACE? comment

// headers

chapter_header: _CHAPTER_TAG _INLINE_WHITESPACE title _INLINE_WHITESPACE?
section_header: _SECTION_TAG _INLINE_WHITESPACE title _INLINE_WHITESPACE?
subsection_header: _SUBSECTION_TAG _INLINE_WHITESPACE title _INLINE_WHITESPACE?
subsubsection_header: _SUBSUBSECTION_TAG _INLINE_WHITESPACE title _INLINE_WHITESPACE?

// image

image: IMAGE



//////////////// MATH CONTENT ////////////////////////////////////////////////////////////////////////////////////////////////



NUMBER: /[0-9]/
LETTER: /[a-zA-Z]/

// brackets will cause trouble in conjunction to sub-expressions
// could work if they had to be paired
PARENTHESES: "(" | ")" | "[" | "]" | /\|(?!\-)/ | "{{" | "}}"
PUNCTUATION: "," | "'" | ":" | ";" | "?" | "\""  | " /" | "/ " | "."

SHORTCUT_OPERATOR: "<=>" | "<=" | "=>" | "|->" | "->" | "<-" | "<->" | ">>" | "<<" | "\\Σ" | "\\π" | "\\∪" | "\\∩" | "\\∫" | "\\∨" | "\\∧" | "\\⊕" | "\\⊗"
UNICODE_OPERATOR: /[≶∧∨∩∪∀∃∄∂∫≤≥≪≫\!\|∈∉∙≆≃≅×±¬∤⊍⨄\~≡≢≈≉⊂⊆⊃⊇≠\+\-⊤⊥⊨⊢⌈⌉⌊𝨨⌋⊈⊉▢≰≱†☐⟦⟧⊕⊗∥≺≻≼≽]/ | /(?<= )\\(?= )/ | /=(?<![<|])(?!>)/ | /<(?!\=)/ | />(?<!\=)/ | /(?<=[\^_])\*/ | /\*(?=[ \t\n,\.}\)\]`])/ | /%(?=[ \t\n,\.}\)\]`])/ | /((?<!#)#(?!#))/
// old backslash /\\(?![\\\]\[\)\(}{\|)])/
KEYWORD_OPERATOR:  "limsup" | "liminf" | "arccos" | "arcsin"  | "argmax" | "argmin" | "mod" | "min" | "max" | "sin" | "cos" | "tan" | "exp" | "log" | "ln" | "sup" | "inf" | "sgn" | "lim" | "diag" | "span" |  "conv" |  "cone" 

MATH_SYMBOLS: /[∞⟨⟩⋱︙⠇∇⊥∅↾◦○￮∝¶✓≼≺⇳⇕⇓⇑↓↑⊄⊅⋡∋⊴⊵⊲⊳⋪⋫⋬⋭∦⌈⌉⌊𝨨⌋⊊⊋]/
MATH_GREEK_SYMBOLS: /[αβγδεφηικλμν𝛝ωπΘψρστυχξζΩΨΣΔ∆ΦΓΛΞ]/
MATH_BB_SYMBOLS: /[𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ]/
MATH_CAL_SYMBOLS: /[𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩]/

OPEN_BRACKET: "{"
CLOSE_BRACKET: "}"

SINGLE_OPEN_BRACKET: /(?<=[_\^]){/ | /(?<!{){(?!{)/
SINGLE_CLOSE_BRACKET: /(?<!})}(?!})/

DOUBLE_OPEN_BRACKET: "{{"
DOUBLE_CLOSE_BRACKET: "}}"


DIVISION_OPERATOR: "/"
ROOT_OPERATOR: "√"

_TEXT_BLOCK_DELIMITER: "``"
MATH_TEXT: /[^`]+/

// array

ARRAY_OPEN: /(\\[\(\[\{\\\|(\|\|)])/
ARRAY_CLOSE: /(\\[\)\]}\\\|(\|\|)])/
ARRAY_COLUMN_DIVIDER: /(?<!&)&(?!&)/
_ARRAY_ROW_DIVIDER: "&&"

// over/underline/sub/superscript

BOLD_OPERATOR: /(?<=[ \t\n{(\[`])\*(?! \t\n})/
ITALIC_OPERATOR: /(?<=[ \t\n{(\[`])%(?! \t\n})/
// MONOTYPE_OPERATOR: 
OVERLINE_OPERATOR: /(?<=[ \t\n{(\[`])\^/
UNDERLINE_OPERATOR: /(?<=[ \t\n{(\[`])_/
SUPERSCRIPT_OPERATOR: /\^(?![ \t}`])/
SUBSCRIPT_OPERATOR: /_(?![ \t}`])/







////////////////////////////////////////////////////////////////// newnew:


_sub_expression: sub_expression | symbol
sub_expression: OPEN_BRACKET _INLINE_WHITESPACE? inline_expression _INLINE_WHITESPACE? CLOSE_BRACKET

expression: _expression
_expression: term
           | term (inline_whitespace | NEWLINE)+ _expression
           | term _term
           | term _expression
           | _term (inline_whitespace | NEWLINE)* _expression
           | _term

inline_expression: _inline_expression
_inline_expression: term
           | term inline_whitespace+ _inline_expression
           | term _term
           | term _inline_expression
           | _term inline_whitespace* _inline_expression
           | _term

term: symbol+
_term: sub_expression | sub_super_script_term | formatting | fraction | root | text_block | array | comment

// atomic

symbol: SHORTCUT_OPERATOR | KEYWORD_OPERATOR | UNICODE_OPERATOR | NUMBER | LETTER | MATH_GREEK_SYMBOLS | MATH_BB_SYMBOLS | MATH_CAL_SYMBOLS | MATH_SYMBOLS | PUNCTUATION | PARENTHESES

text_block: _TEXT_BLOCK_DELIMITER MATH_TEXT _TEXT_BLOCK_DELIMITER

// operations

formatting: (BOLD_OPERATOR | ITALIC_OPERATOR | OVERLINE_OPERATOR | UNDERLINE_OPERATOR) (array | _sub_expression) 

sub_super_script_term: (array | _sub_expression) SUBSCRIPT_OPERATOR _sub_expression SUPERSCRIPT_OPERATOR _sub_expression
                     | (array | _sub_expression) SUPERSCRIPT_OPERATOR _sub_expression SUBSCRIPT_OPERATOR _sub_expression
                     | (array | _sub_expression) (SUBSCRIPT_OPERATOR | SUPERSCRIPT_OPERATOR) _sub_expression
                
                
fraction: (array | _sub_expression) DIVISION_OPERATOR (array | _sub_expression)
root: _sub_expression? ROOT_OPERATOR _sub_expression

// array

array: ARRAY_OPEN (_INLINE_WHITESPACE? _NEWLINE)? (array_row ((_ARRAY_ROW_DIVIDER | _NEWLINE) array_row)+) _INLINE_WHITESPACE? _NEWLINE? _INLINE_WHITESPACE? ARRAY_CLOSE
array_row: _array_item (_INLINE_WHITESPACE? ARRAY_COLUMN_DIVIDER _array_item)*
_array_item: _INLINE_WHITESPACE? inline_expression? _INLINE_WHITESPACE? 







